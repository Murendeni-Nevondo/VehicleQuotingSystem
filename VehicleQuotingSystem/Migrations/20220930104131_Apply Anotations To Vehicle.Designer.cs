// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleQuotingSystem.Data;

#nullable disable

namespace VehicleQuotingSystem.Migrations
{
    [DbContext(typeof(VehicleQuotingSystemContext))]
    [Migration("20220930104131_Apply Anotations To Vehicle")]
    partial class ApplyAnotationsToVehicle
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VehicleQuotingSystem.Models.PolicyHolder", b =>
                {
                    b.Property<int>("PolicyHolderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyHolderId"), 1L, 1);

                    b.Property<string>("ClientCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PolicyHolderId");

                    b.ToTable("PolicyHolders");
                });

            modelBuilder.Entity("VehicleQuotingSystem.Models.Quote", b =>
                {
                    b.Property<int>("QuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuoteId"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("PolicyHolderId")
                        .HasColumnType("int");

                    b.Property<string>("QuoteRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuoteId");

                    b.HasIndex("PolicyHolderId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("VehicleQuotingSystem.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"), 1L, 1);

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RetailValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleQuotingSystem.Models.VehicleQuote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SumInsured")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuoteId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleQuotes");
                });

            modelBuilder.Entity("VehicleQuotingSystem.Models.Quote", b =>
                {
                    b.HasOne("VehicleQuotingSystem.Models.PolicyHolder", "PolicyHolder")
                        .WithMany()
                        .HasForeignKey("PolicyHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PolicyHolder");
                });

            modelBuilder.Entity("VehicleQuotingSystem.Models.VehicleQuote", b =>
                {
                    b.HasOne("VehicleQuotingSystem.Models.Quote", "Quote")
                        .WithMany("VehicleQuotes")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleQuotingSystem.Models.Vehicle", "Vehicle")
                        .WithMany("VehicleQuotes")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("VehicleQuotingSystem.Models.Quote", b =>
                {
                    b.Navigation("VehicleQuotes");
                });

            modelBuilder.Entity("VehicleQuotingSystem.Models.Vehicle", b =>
                {
                    b.Navigation("VehicleQuotes");
                });
#pragma warning restore 612, 618
        }
    }
}
